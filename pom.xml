<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://Maven.apache.org/POM/4.0.0"
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
xsi:schemaLocation="http://Maven.apache.org/POM/4.0.0 http://Maven.apache.org/xsd/Maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>com.indix.sherlock</groupId>
    <artifactId>sherlock-perftest</artifactId>
    <version>1.0-SNAPSHOT</version>
    <packaging>pom</packaging>
  <build>
     <plugins>
      <plugin>
        <groupId>com.lazerycode.jmeter</groupId>
          <artifactId>jmeter-maven-plugin</artifactId>
          <version>1.10.1</version>
          <configuration>
            <!--
               By default the test results are saved in a file  
                /target/jmeter/results/<testname>-<timestamp>.jtl
                Further processing is easier without timestamp though.
             -->
            <testResultsTimestamp>false</testResultsTimestamp>
            <!--
               To simplify debugging, it is advisable to adapt the loglevel.
               The jmeter logs are written to the file jmeter.log.
            -->
            <overrideRootLogLevel>DEBUG</overrideRootLogLevel>
 
            <!--
               By default, the console output during a jmeter test run is suppressed.
               We want to display the progress using the listener "Generate Summary Results" 
               (which periodically prints stats to stdout). Therefore we have to make sure,
               that the jmeter output is not suppressed.
            -->
             <suppressJMeterOutput>false</suppressJMeterOutput>
 
            <!--
               If tests fail (e.g. a http-request running into a timeout), the corresponding maven
               goal also fails (and subsequent goals aren't executed anymore). We want to create graphs
               from test-results, no matter if some requests failed or not, so we ignore jmeter failures.
            -->
            <ignoreResultFailures>true</ignoreResultFailures>
          </configuration>
       <dependencies>
         <dependency>
         <groupId>kg.apc</groupId>
         <artifactId>jmeter-plugins</artifactId>
         <version>1.0.0</version>
         <exclusions>
         <!--
            Unfortunately some transitive dependencies cannot be found on mvncentral
            and we have to explicitly exclude them.
            For a complete list, see https://github.com/mlex/jmeter-maven-example/
         -->
         <exclusion>
             <groupId>kg.apc</groupId>
             <artifactId>perfmon</artifactId>
          </exclusion>
        <!-- ... -->
 
         <!--
             Because of a bug in the jmeter-maven-plugin (see 
             https://github.com/Ronnie76er/jmeter-maven-plugin/issues/77) we have to
             exclude jmeter dependencies here, too.
         -->
         <exclusion>
             <groupId>org.apache.jmeter</groupId>
             <artifactId>jorphan</artifactId>
         </exclusion>
         <!-- ... -->
        </exclusions>
       </dependency>
       <dependency>
         <groupId>io.netty</groupId>
         <artifactId>netty-all<artifactId>
         <version>5.0.0.Alpha2</version>
       </dependency>
       <dependency>
         <groupId>io.netty</groupId>
         <artifactId>netty-tcnative</artifactId>
         <version>1.1.33.Fork10</version>
       </dependency>
       <dependency>
         <groupId>com.twitter</groupId>
         <artifactId>hpack</artifactId>
         <version>0.11.0</version>
       </dependency>
       <dependency>
         <groupId>com.jcraft</groupId>
         <artifactId>jzlib</artifactId>
         <version>1.1.3</version>
       </dependency>
      </dependencies>
      <executions>
         <execution>
         <id>jmeter-search-tests</id>
         <phase>verify</phase>
            <goals> <goal>jmeter</goal> </goals>
         <configuration>
             <customPropertiesFile>${property}</customPropertiesFile>
         </configuration>
      </execution>
      </executions>
  </plugin>
    <plugin>
       <groupId>com.lazerycode.jmeter</groupId>
        <artifactId>jmeter-analysis-maven-plugin</artifactId>
          <executions>
             <execution>
               <id>thread</id>
               <phase>install</phase>
               <goals> <goal>analyze</goal> </goals>
               <configuration>
                    <source>${project.build.directory}/**/*.jtl</source>
                    <targetDirectory>${project.build.directory}/jmeter/test_report</targetDirectory>
                    <processAllFilesFound>true</processAllFilesFound>
                    <checkResult>
                        <!-- Optional : check throughput. -->
                      <throughput>
                      <!-- Default: -1 (disabling) -->
                       <threshold>-1</threshold>

              <!-- Default: UPPER_LOWER_TOLERANCE
            * UPPER_LOWER_TOLERANCE : minValue = (threshold - (threshold * tolerance / 100)), maxValue = (threshold + (threshold * tolerance / 100))
            If throughput result test is between minValue and maxValue, maven build is OK otherwise, build failed.
            -->
                       <toleranceDirection>UPPER_LOWER_TOLERANCE</toleranceDirection>

            <!-- Default: 5 (percent)
            Used for calculate min et max values.
            -->
                        <tolerance>5</tolerance>
                     </throughput>
                <!-- Optional : check percent errors. -->
                    <errors>
                        <!-- As above -->
                        <threshold>-1</threshold>
                        <toleranceDirection>UPPER_LOWER_TOLERANCE</toleranceDirection>
                        <tolerance>5</tolerance>
                    </errors>
                  </checkResult>
               </configuration>
            </execution>
        </executions>
     </plugin>
  </plugins>
</build>
</project>
